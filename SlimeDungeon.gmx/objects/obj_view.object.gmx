<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// camera move around
zoom = 1;
bfollowplayer = true;
bcameracontrol = false;

// move to player
if(instance_exists(obj_player)){
    x = obj_player.x;
    y = obj_player.y;    
}
ispress_right = false;
selectbox1_x = 0;
selectbox1_y = 0;
selectbox2_x = 0;
selectbox2_y = 0;

view_wview[0] = 320 * zoom;
view_hview[0] = 240 * zoom;

view_xview[0] = x - view_wview / 2;
view_yview[0] = y - view_hview / 2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move 10% toward the player
// current += (target - current) * 0.1;

if(bfollowplayer){
    if(instance_exists(obj_player)){
        //fixed view port to update
        view_xview[0] = x - view_wview / 2;
        view_yview[0] = y - view_hview / 2;
        //add lag move here
        x += (obj_player.x - x) * 0.1;
        y += (obj_player.y - y) * 0.1;
    }
}

//make sure the right click hold move doesn't move if the position is same else move pan
if(mouse_check_button_pressed(mb_right)){
    if(ispress_right == false){
        selectbox1_x = mouse_x;
        selectbox1_y = mouse_y;
        ispress_right = true;    
    }
}

if(mouse_check_button_released(mb_right)){
    ispress_right = false;  
}

if(ispress_right){
    selectbox2_x = mouse_x;
    selectbox2_y = mouse_y;
    if(selectbox1_x == selectbox2_x and selectbox1_y == selectbox2_y){
        //show_debug_message("do nothing");
        exit;
    }else{
        //show_debug_message("move?");    
    }
}

if(bcameracontrol){
    ///zoom
    if(mouse_wheel_up()){
        zoom -=0.10;    
    }
    if (mouse_wheel_down()){
        zoom +=0.10;   
    }
    
    //default view port init and sacle to 1
    view_wview[0] = 320 * zoom;
    view_hview[0] = 240 * zoom;
    
    // This sets it up so that the camera is exactly in the middle of the screen at all times, regardless of zoom.
    view_xview[0] = x - view_wview / 2;
    view_yview[0] = y - view_hview / 2;
    //panning view port
    if (mouse_check_button(mb_right)){
        // Points towards the mouse
        direction = point_direction(x, y, mouse_x, mouse_y)
        // Finds the distance from the camera object to the mouse, then divides it by (10 * zoom) so that the camera pan speed stays reasonable
        speed = distance_to_point(mouse_x, mouse_y) / (10 * zoom)
    }
    else{ speed = 0};
    x += lengthdir_x(speed,direction);
    y += lengthdir_y(speed,direction);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
