<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pointer</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spawnme =0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>109</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_move_to</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>mouse_x</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>mouse_y</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mouse_x div 32&lt; 31 and mouse_y div 32 &lt; 31 and mouse_x div 32 &gt;0 and mouse_y div 32 &gt;0){
global.currenttile = global.Tile[(mouse_x div 32 )*2+1,mouse_y div 32];}

if (!instance_exists(s_highlight) and position_meeting(x,y,s_Edit_Tiles_Pointer) and (mouse_x div 32) = (x div 32) &amp;&amp; (mouse_y div 32) = (y div 32)) then
{
 {instance_create(((x div 32)*32)+16, ((y div 32)*32)+16, s_highlight);}
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>s_Edit_Tiles_Pointer.tile = t_basic;

if (mouse_x div 32&lt; 31 and mouse_y div 32 &lt; 31 and mouse_x div 32 &gt;0 and mouse_y div 32 &gt;0){
vartile = global.Tile[(x div 32)*2, y div 32]

with (vartile)
    {
    mx = mouse_x div 32;
    my = mouse_y div 32;
    ox = x div 32;
    oy = y div 32;
    if (mx = ox and my = oy) then
        {
        
        //left
        with (global.Tile[mx*2+2,my]){
        if (object_is_ancestor(object_index,p_tile_d))
        {s_Edit_Tiles_Pointer.spawnme=1;}
        }
        //right
        with (global.Tile[mx*2-2,my]){
        if (object_is_ancestor(object_index,p_tile_d))
        {s_Edit_Tiles_Pointer.spawnme=1;}
        }
        //Up
        with (global.Tile[mx*2,my-1]){
        if (object_is_ancestor(object_index,p_tile_d))
        {s_Edit_Tiles_Pointer.spawnme=1;}
        }
        //Down
        with (global.Tile[mx*2,my+1]){
        if (object_is_ancestor(object_index,p_tile_d))
        {s_Edit_Tiles_Pointer.spawnme=1;}
        }
        
        if (s_Edit_Tiles_Pointer.spawnme = 1) then
        {Change_Tile(global.Tile[(mouse_x div 32)*2,y div 32]);
        s_Edit_Tiles_Pointer.spawnme=0;}
        
        } 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*global.rm +=1;
if (global.rm &gt;= 3) then {global.rm = 0}
switch (global.rm)
   {
   case 0: room_goto(Floor0); break;
   case 1: room_goto(Floor1); break;
   case 2: room_goto(Floor2); break;
   }*/
   
with (global.Tile[(mouse_x div 32)*2, mouse_y div 32])
{ 
if (object_is_ancestor(object_index,p_tile_d)){
instance_create(mouse_x,mouse_y,m_slime); 

instance_create(mouse_x,mouse_y+1,obj_PLayer);

    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
